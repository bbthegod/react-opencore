/*
*
* {{ properCase containerName }} Slice
*
*/
import { createSlice } from 'utils/@reduxjs/toolkit';
import { {{ camelCase containerName }}Saga } from './saga';
import { {{ properCase containerName }}State } from './types';

export const initialState: {{ properCase containerName }}State = {
  data: [],
  loading: false,
  success: false,
  failure: false,
};

const slice = createSlice({
  name: '{{ camelCase containerName }}',
  initialState,
  reducers: {
      get(state) {
        state.loading = true;
        state.success = false;
        state.failure = false;
      },
      getSuccess(state, actions) {
        state.data = actions.payload;
        state.loading = false;
        state.success = true;
        state.failure = false;
      },
      getFailure(state) {
        state.loading = false;
        state.success = false;
        state.failure = true;
      },
  },
});

export const { actions } = slice;

export const {{ camelCase containerName }}Slice = { key: slice.name, reducer: slice.reducer, saga: {{ camelCase containerName }}Saga };